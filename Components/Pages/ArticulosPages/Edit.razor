@page "/Articulo/Edit/{ArticuloId:int}"

@inject ArticuloService articuloService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Modificar Art&iacute;culo</PageTitle>
<EditForm Model="Articulos" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<h3><strong>Modificar art&iacute;culo</strong></h3>
			</div>
			@*Body*@
			<div class="card-body">
				<div class="row">
					@*Id*@
					<div class="col-1">
						<label class="form-label" for="Id"><strong>Art&iacute;culoId</strong></label>
						<InputNumber class="form-control" id="Id" @bind-Value="Articulos.ArticuloId" readonly></InputNumber>
					</div>
				</div>
				@*Descripcion*@
				<div class="col-3">
					<label class="form-label" for="descripcion"><strong>Descripci&oacute;n</strong></label>
					<InputText class="form-control" id="descripcion" @bind-Value="Articulos.Descripcion"></InputText>
					<ValidationMessage For="(()=> Articulos.Descripcion)" />
				</div>
				@*Costo*@
				<div class="col-3">
					<label class="form-label" for="costo"><strong>Costo</strong></label>
					<input type="number" class="form-control" id="costo" @bind="Costo" @bind:event="oninput"></input>
					<ValidationMessage For="(()=> Articulos.Costo)" />
				</div>
				@*Ganancia*@
				<div class="col-2">
					<label class="form-label" for="Ganancia"><strong>Ganancia</strong></label>
					<input type="number" class="form-control" id="Ganancia" @bind="Ganancia" @bind:event="oninput"></input>
					<ValidationMessage For="(()=> Articulos.Ganancia)" />
				</div>
				@*Precio*@
				<div class="col-3">
					<label class="form-label" for="Precio"><strong>Precio</strong></label>
					<label class="form-control" id="Precio" readonly>@Articulos.Precio.ToString("N2")</label>
				</div>

			</div>
			@*Footer*@
			<div class="card-footer text-center">
				<button type="button" class="btn btn-outline-primary" @onclick="()=>Volver()"><Icon Name="IconName.Arrow90DegLeft"></Icon> Volver</button>
				<button type="submit" class="btn btn-outline-success"><Icon Name="IconName.Pencil"></Icon> Modificar</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	[Parameter]
	public int ArticuloId { get; set; }
	public Articulos Articulos { get; set; } = new Articulos();
	public List<ToastMessage> Mensaje = new List<ToastMessage>();

	protected override async Task OnInitializedAsync() {
		Articulos = await articuloService.Buscar(ArticuloId);
	}

	private ToastMessage ShowToast(ToastType toastType, string message) {
		var mensaje = new ToastMessage() {
				Type = toastType,
				Message = $"{message}. El {DateTime.Now.ToString("dd/MM/yyyy")} a las {DateTime.Now.ToString("hh:mm tt")}",
			};
		toastService.Notify(mensaje);
		return mensaje;
	}

	public void Notificacion(ToastType toastType, string message) => Mensaje.Add(ShowToast(toastType, message));

	private async Task Modificar() {
		if (await Validar()) {
			Notificacion(ToastType.Warning, "Ya existe un articulo con esta descripción");
			return;
		}
		var crear = await articuloService.Guardar(Articulos);
		if (crear) {
			Notificacion(ToastType.Success, $"El artículo {Articulos.Descripcion} se ha actualizado correctamente");
			Volver();
		}
		else
			Notificacion(ToastType.Danger, "No se ha modificado correctamente");
	}

	public double Costo {
		get => (double)Articulos.Costo;
		set
		{
			if ((double)Articulos.Costo != value) {
				Articulos.Costo = (decimal)value;
				CalcularPrecio();
			}
		}
	}

	public double Ganancia {
		get => (double)Articulos.Ganancia;
		set
		{
			if ((double)Articulos.Ganancia != value) {
				Articulos.Ganancia = (decimal)value;
				CalcularPrecio();
			}
		}

	}

	private void CalcularPrecio() {
		Articulos.Precio = Articulos.Costo + (Articulos.Costo * (Articulos.Ganancia / 100));
	}

	private async Task<bool> Validar() {
		var existe = await articuloService.ExisteDescripcion(Articulos.ArticuloId, Articulos.Descripcion!);
		return existe;
	}

	private void Volver() {
		Navigation.NavigateTo("/Articulo/Index");
	}
}